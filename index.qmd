---
format:
  revealjs:
    slide-level: 2
    bibliography: references.yaml
    csl: ecology.csl
    reference-location: document
    css: styles.css
    slide-number: true
    self-contained: true
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(taxastand)
library(tidyverse)
library(dwctaxon)
options(ts_tbl_out = TRUE)
```

# Introduction {visibility="hidden"}

## `taxastand` and `dwctaxon`

### A pair of R packages for standardizing species names in Darwin Core format

::: {.medium}
**Joel Nitta**, Wataru Iwasaki  
The University of Tokyo  

BioDigiCon 2022  
:::

![](images/taxastand_sticker.png){.absolute bottom=100 right=350 width="300"}

![](images/dwctaxon.png){.absolute bottom=100 right=50 width="300"}

::: {.medium .absolute bottom=30 left=0}
[https://joelnitta.github.io/biodigi_2022](https://joelnitta.github.io/biodigi_2022)
:::

## Species names are the "glue" that connect datasets

::: {.center}
![](images/fig-1-full.png){height="450"}
:::

::: {.medium}
@Page2013
:::

## Synonyms break linkages

![](images/synonyms.png){.absolute top=200 left=50 height="120"}

## In the age of big data, software is needed to resolve taxonomy

![](images/gbif.png)

::: {.aside .medium}
https://www.gbif.org/
:::

## Shortcomings of current approaches

- Many tools only available via an online interface (API)
  - **Difficult to reproduce**
- Limited number of reference databases to choose from
  - **May not be able to implement taxonomy of choice**
- Existing tools do not recognize the rules of taxonomic nomenclature
  - **May not be able to accurately match names**

## Features of `taxastand`

- Run **locally** in R
- Allows usage of a **custom reference database**
- Supports **fuzzy matching**
- Understands **taxonomic rules**

Available at [https://github.com/joelnitta/taxastand](https://github.com/joelnitta/taxastand)

:::{.aside}
Thanks to Cam Webb and [taxon-tools](https://github.com/camwebb/taxon-tools).

Check out the taxon-tools [poster at Botany 2020](http://alaskaflora.org/files/webb_BSA2020.pdf)
:::

# Usage

## Installation

In R:

```{r}
#| label: install
#| eval: false
# install remotes first
install.packages("remotes")
remotes::install_github("joelnitta/taxastand")
library(taxastand)
```

Also, need to either install [`taxon-tools`](https://github.com/camwebb/taxon-tools) or **Docker**

## Name matching

```{r}
#| label: basic-matching-fuzzy
res <- ts_match_names(
    query = "Crepidomanes minutus",
    reference = c(
      "Crepidomanes minutum",
      "Hymenophyllum polyanthos"),
    simple = TRUE,
    docker = TRUE
    )
glimpse(res)
```

## Matching based on taxonomic rules

```{r}
#| label: basic-matching-rules
res <- ts_match_names(
    query = "Crepidomanes minutum K. Iwats.",
    reference = c(
      "Crepidomanes minutum (Bl.) K. Iwats.",
      "Hymenophyllum polyanthos (Sw.) Sw."),
    simple = TRUE,
    docker = TRUE
    )
glimpse(res)
```

## For name resolution, need a reference database

```{r}
#| label: load-data
data(filmy_taxonomy)
head(filmy_taxonomy[c("taxonID", "acceptedNameUsageID",
  "taxonomicStatus", "scientificName")])
```

## Name resolution

```{r}
#| label: resolve
res <- ts_resolve_names(
  query = "Gonocormus minutum",
  ref_taxonomy = filmy_taxonomy,
  docker = TRUE)
glimpse(res)
```

## `dwctaxon`

- Goal: enable **simple**, **error-free** editing of DWC taxon data

- Available at [https://github.com/joelnitta/dwctaxon](https://github.com/joelnitta/dwctaxon)

## Example: filmy ferns

```{r}
#| label: dct-change-status-before
#| eval: false
filmies <- head(dct_filmies) |>
  filter(str_detect(scientificName, "crassum|densinervium"))

filmies
```

```{r}
#| label: dct-change-status-before-hide
#| echo: false
filmies <- head(dct_filmies) |>
  filter(str_detect(scientificName, "crassum|densinervium"))

filmies |> 
  select(-taxonRank)
```

## Changing taxonomy is complicated {.smaller}

Old version:

- Accepted species 1: *Cephalomanes crassum*
  - Synonym: *Trichomanes crassum*
- Accepted species 2: *Cephalomanes densinervium*
  - Synonym: *Trichomanes densinervium*

::: {.fragment}
New version (*C. crassum* → synonym of ***C. densinervium***):
:::

::: {.incremental}
- Accepted species: ***Cephalomanes densinervium***
  - Synonym 1: *Cephalomanes crassum*
  - Synonym 2: *Trichomanes crassum*
  - Synonym 3: *Trichomanes densinervium*
:::

::: {.fragment}
Need to account for **all** synonyms
:::

## `dct_change_status()` handles synonym mapping

```{r}
#| label: dct-change-status-after
#| eval: false
# C. crassum → synonym of C. densinervium
dct_change_status(
  tax_dat = filmies,
  sci_name = "Cephalomanes crassum (Copel.) M. G. Price",
  new_status = "synonym",
  usage_name = "Cephalomanes densinervium (Copel.) Copel."
)
```

```{r}
#| label: dct-change-status-after-hide
#| echo: false
dct_change_status(
  tax_dat = filmies,
  sci_name = "Cephalomanes crassum (Copel.) M. G. Price",
  new_status = "synonym",
  usage_name = "Cephalomanes densinervium (Copel.) Copel."
) |> 
  select(-taxonRank, -modified)
```

## `dct_validate()` checks taxonomic data

```{r}
#| label: dct-validate
#| error: true
#| code-line-numbers: "7"
dct_change_status(
  tax_dat = filmies,
  sci_name = "Trichomanes crassum Copel.",
  new_status = "synonym",
  usage_name = "Trichomanes densinervium Copel."
) |>
dct_validate()
```

## Putting it all together (with `|>`)

```{r}
#| label: pteridocat-example
#| eval: false

ferns_tax_raw |>
# Add entry for Dryopteris simasakii var. simasakii autonym
  dct_add_row(
    sci_name = "Dryopteris simasakii var. simasakii",
    taxonomicStatus = "accepted",
    taxonRank = "variety",
    parentNameUsageID = "37XPH",
  ) |>
  # Change status of Parahemionitis arifolia as indicated by plastome data
  dct_change_status(
    sci_name = "Parahemionitis arifolia (Burm. fil.) Panigrahi",
    new_status = "accepted"
  ) |>
  dct_change_status(
    sci_name = "Hemionitis arifolia (Burm. fil.) T. Moore",
    new_status = "synonym",
    usage_name = "Parahemionitis arifolia (Burm. fil.) Panigrahi"
  ) |>
  # ... (other changes)
  dct_validate()
```

Example: [https://github.com/fernphy/pteridocat](https://github.com/fernphy/pteridocat)

# Summary

## `taxastand` + `dwctaxon`: flexible taxonomic standardization

- `taxastand`: accurate, customizable taxonomic resolution

- `dwctaxon`: maintenance of DWC-compliant taxonomic database

::: {.fragment}

Not all researchers need this (standard databases may be fine)

- Please **choose the tool that works best for you**! [see @Grenie2022]

:::

## Acknowledgements

- Japan Society for the Promotion of Science

- Members of the Iwasaki lab, The University of Tokyo

- C. Webb

- M. Hassler

## References {.scrollable}